{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\office-work\\\\canvas\\\\src\\\\components\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [shapes, setShapes] = useState([]);\n  const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizeHandle, setResizeHandle] = useState(null); // 'nw', 'ne', 'sw', 'se'\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Draw shapes on the canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw all shapes\n    shapes.forEach((shape, index) => {\n      ctx.strokeStyle = \"black\"; // Set outline color to black\n      ctx.lineWidth = 2; // Set outline thickness\n\n      switch (shape.type) {\n        case \"rectangle\":\n          ctx.strokeRect(shape.x, shape.y, shape.width, shape.height);\n          break;\n        case \"parallelogram\":\n          drawParallelogram(ctx, shape);\n          break;\n        case \"circle\":\n          drawCircle(ctx, shape);\n          break;\n        case \"arrow\":\n          drawArrow(ctx, shape);\n          break;\n        case \"diamond\":\n          drawDiamond(ctx, shape);\n          break;\n        case \"oval\":\n          drawOval(ctx, shape);\n          break;\n        case \"triangle\":\n          drawTriangle(ctx, shape);\n          break;\n        case \"stickman\":\n          drawStickman(ctx, shape);\n          break;\n        default:\n          break;\n      }\n\n      // Highlight selected shape\n      if (index === selectedShapeIndex) {\n        ctx.strokeStyle = \"red\";\n        ctx.strokeRect(shape.x - 5, shape.y - 5, shape.width + 10, shape.height + 10);\n\n        // Draw resize handles\n        const handleSize = 8;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(shape.x - handleSize / 2, shape.y - handleSize / 2, handleSize, handleSize); // NW\n        ctx.fillRect(shape.x + shape.width - handleSize / 2, shape.y - handleSize / 2, handleSize, handleSize); // NE\n        ctx.fillRect(shape.x - handleSize / 2, shape.y + shape.height - handleSize / 2, handleSize, handleSize); // SW\n        ctx.fillRect(shape.x + shape.width - handleSize / 2, shape.y + shape.height - handleSize / 2, handleSize, handleSize); // SE\n      }\n    });\n  }, [shapes, selectedShapeIndex]);\n\n  // Function to draw a parallelogram\n  const drawParallelogram = (ctx, shape) => {\n    ctx.beginPath();\n    ctx.moveTo(shape.x + shape.width * 0.2, shape.y);\n    ctx.lineTo(shape.x + shape.width, shape.y);\n    ctx.lineTo(shape.x + shape.width * 0.8, shape.y + shape.height);\n    ctx.lineTo(shape.x, shape.y + shape.height);\n    ctx.closePath();\n    ctx.stroke(); // Draw outline\n  };\n\n  // Function to draw a circle\n  const drawCircle = (ctx, shape) => {\n    ctx.beginPath();\n    ctx.arc(shape.x + shape.width / 2, shape.y + shape.height / 2, shape.width / 2, 0, Math.PI * 2);\n    ctx.stroke(); // Draw outline\n  };\n\n  // Function to draw an arrow\n  const drawArrow = (ctx, shape) => {\n    ctx.beginPath();\n    ctx.moveTo(shape.x, shape.y + shape.height / 2);\n    ctx.lineTo(shape.x + shape.width * 0.8, shape.y + shape.height / 2);\n    ctx.lineTo(shape.x + shape.width * 0.8, shape.y);\n    ctx.lineTo(shape.x + shape.width, shape.y + shape.height / 2);\n    ctx.lineTo(shape.x + shape.width * 0.8, shape.y + shape.height);\n    ctx.lineTo(shape.x + shape.width * 0.8, shape.y + shape.height / 2);\n    ctx.closePath();\n    ctx.stroke(); // Draw outline\n  };\n\n  // Function to draw a diamond\n  const drawDiamond = (ctx, shape) => {\n    ctx.beginPath();\n    ctx.moveTo(shape.x + shape.width / 2, shape.y);\n    ctx.lineTo(shape.x + shape.width, shape.y + shape.height / 2);\n    ctx.lineTo(shape.x + shape.width / 2, shape.y + shape.height);\n    ctx.lineTo(shape.x, shape.y + shape.height / 2);\n    ctx.closePath();\n    ctx.stroke(); // Draw outline\n  };\n\n  // Function to draw an oval\n  const drawOval = (ctx, shape) => {\n    ctx.beginPath();\n    ctx.ellipse(shape.x + shape.width / 2, shape.y + shape.height / 2, shape.width / 2, shape.height / 2, 0, 0, Math.PI * 2);\n    ctx.stroke(); // Draw outline\n  };\n\n  // Function to draw a triangle\n  const drawTriangle = (ctx, shape) => {\n    ctx.beginPath();\n    ctx.moveTo(shape.x + shape.width / 2, shape.y);\n    ctx.lineTo(shape.x + shape.width, shape.y + shape.height);\n    ctx.lineTo(shape.x, shape.y + shape.height);\n    ctx.closePath();\n    ctx.stroke(); // Draw outline\n  };\n\n  // Function to draw a stickman\n  const drawStickman = (ctx, shape) => {\n    // Head\n    ctx.beginPath();\n    ctx.arc(shape.x + shape.width / 2, shape.y + shape.width / 4, shape.width / 4, 0, Math.PI * 2);\n    ctx.stroke(); // Draw outline\n\n    // Body\n    ctx.beginPath();\n    ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.width / 2);\n    ctx.lineTo(shape.x + shape.width / 2, shape.y + shape.height * 0.75);\n    ctx.stroke();\n\n    // Arms\n    ctx.beginPath();\n    ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height * 0.4);\n    ctx.lineTo(shape.x, shape.y + shape.height * 0.6);\n    ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height * 0.4);\n    ctx.lineTo(shape.x + shape.width, shape.y + shape.height * 0.6);\n    ctx.stroke();\n\n    // Legs\n    ctx.beginPath();\n    ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height * 0.75);\n    ctx.lineTo(shape.x, shape.y + shape.height);\n    ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height * 0.75);\n    ctx.lineTo(shape.x + shape.width, shape.y + shape.height);\n    ctx.stroke();\n  };\n\n  // Add a new shape to the canvas\n  const addShape = type => {\n    const newShape = {\n      type,\n      x: 50,\n      y: 50,\n      width: 100,\n      height: 100\n    };\n    setShapes([...shapes, newShape]);\n  };\n  const [isOpen, setIsOpen] = useState(true);\n\n  // Clear canvas\n  const clearCanvas = () => {\n    setShapes([]);\n  };\n\n  // Save canvas as image\n  const saveCanvasAsImage = () => {\n    const canvas = canvasRef.current;\n    const tempCanvas = document.createElement(\"canvas\");\n    const tempCtx = tempCanvas.getContext(\"2d\");\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    tempCtx.fillStyle = \"#FFFFFF\";\n    tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\n    tempCtx.drawImage(canvas, 0, 0);\n\n    // Convert to JPG\n    const image = tempCanvas.toDataURL(\"image/jpeg\");\n    const link = document.createElement(\"a\");\n    link.href = image;\n    link.download = \"canvas_image.jpg\";\n    link.click();\n  };\n\n  // Handle mouse down event\n  const handleMouseDown = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n\n    // Check if the mouse is inside any shape\n    shapes.forEach((shape, index) => {\n      if (mouseX >= shape.x && mouseX <= shape.x + shape.width && mouseY >= shape.y && mouseY <= shape.y + shape.height) {\n        setSelectedShapeIndex(index);\n\n        // Check if the mouse is on a resize handle\n        const handleSize = 8;\n        const handles = {\n          nw: {\n            x: shape.x - handleSize / 2,\n            y: shape.y - handleSize / 2\n          },\n          ne: {\n            x: shape.x + shape.width - handleSize / 2,\n            y: shape.y - handleSize / 2\n          },\n          sw: {\n            x: shape.x - handleSize / 2,\n            y: shape.y + shape.height - handleSize / 2\n          },\n          se: {\n            x: shape.x + shape.width - handleSize / 2,\n            y: shape.y + shape.height - handleSize / 2\n          }\n        };\n        for (const [key, value] of Object.entries(handles)) {\n          if (mouseX >= value.x && mouseX <= value.x + handleSize && mouseY >= value.y && mouseY <= value.y + handleSize) {\n            setIsResizing(true);\n            setResizeHandle(key);\n            return;\n          }\n        }\n\n        // If not resizing, start dragging\n        setIsDragging(true);\n        setOffset({\n          x: mouseX - shape.x,\n          y: mouseY - shape.y\n        });\n      }\n    });\n  };\n\n  // Handle mouse move event\n  const handleMouseMove = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    if (isDragging && selectedShapeIndex !== null) {\n      // Move the shape\n      const updatedShapes = shapes.map((shape, index) => {\n        if (index === selectedShapeIndex) {\n          return {\n            ...shape,\n            x: mouseX - offset.x,\n            y: mouseY - offset.y\n          };\n        }\n        return shape;\n      });\n      setShapes(updatedShapes);\n    } else if (isResizing && selectedShapeIndex !== null) {\n      // Resize the shape\n      const updatedShapes = shapes.map((shape, index) => {\n        if (index === selectedShapeIndex) {\n          let newWidth = shape.width;\n          let newHeight = shape.height;\n          let newX = shape.x;\n          let newY = shape.y;\n          switch (resizeHandle) {\n            case \"nw\":\n              newWidth = shape.width + (shape.x - mouseX);\n              newHeight = shape.height + (shape.y - mouseY);\n              newX = mouseX;\n              newY = mouseY;\n              break;\n            case \"ne\":\n              newWidth = mouseX - shape.x;\n              newHeight = shape.height + (shape.y - mouseY);\n              newY = mouseY;\n              break;\n            case \"sw\":\n              newWidth = shape.width + (shape.x - mouseX);\n              newHeight = mouseY - shape.y;\n              newX = mouseX;\n              break;\n            case \"se\":\n              newWidth = mouseX - shape.x;\n              newHeight = mouseY - shape.y;\n              break;\n            default:\n              break;\n          }\n          return {\n            ...shape,\n            x: newX,\n            y: newY,\n            width: newWidth,\n            height: newHeight\n          };\n        }\n        return shape;\n      });\n      setShapes(updatedShapes);\n    }\n  };\n\n  // Handle mouse up event\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setIsResizing(false);\n    setResizeHandle(null);\n  };\n\n  // Handle keydown event to delete selected shape\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === \"Delete\" && selectedShapeIndex !== null) {\n        // Remove the selected shape\n        const updatedShapes = shapes.filter((_, index) => index !== selectedShapeIndex);\n        setShapes(updatedShapes);\n        setSelectedShapeIndex(null); // Deselect the shape\n      }\n    };\n\n    // Add event listener for keydown\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [shapes, selectedShapeIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex flex-row h-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sidebar\",\n      className: \"relative flex flex-col w-64 p-4 h-auto space-y-2 overflow-y-auto bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-bold\",\n          children: \"TOOL BAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-xs\",\n          onClick: () => setIsOpen(!isOpen),\n          children: isOpen ? \"Collapse\" : \"Expand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `overflow-hidden transition-[max-height] duration-300 ease-in-out ${isOpen ? \"max-h-full flex-1\" : \"max-h-0\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 p-4 border-slate-400 border-2 bg-slate-400 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addShape(\"rectangle\"),\n              className: \"p-2 hover:bg-gray-400 rounded\",\n              title: \"Rectangle\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./icon/rectangle.svg\",\n                alt: \"Rectangle\",\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addShape(\"parallelogram\"),\n              className: \"p-2 hover:bg-gray-400 rounded\",\n              title: \"Parallelogram\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./icon/parallelogram.svg\",\n                alt: \"Parallelogram\",\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addShape(\"circle\"),\n              className: \"p-2 hover:bg-gray-400 rounded\",\n              title: \"Circle\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./icon/circle.svg\",\n                alt: \"Circle\",\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addShape(\"arrow\"),\n              className: \"p-2 hover:bg-gray-400 rounded\",\n              title: \"Arrow\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./icon/arrow.svg\",\n                alt: \"Arrow\",\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addShape(\"diamond\"),\n              className: \"p-2 hover:bg-gray-400 rounded\",\n              title: \"Diamond\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./icon/diamond.svg\",\n                alt: \"Diamond\",\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addShape(\"oval\"),\n              className: \"p-2 hover:bg-gray-400 rounded\",\n              title: \"Oval\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./icon/oval.svg\",\n                alt: \"Oval\",\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addShape(\"triangle\"),\n              className: \"p-2 hover:bg-gray-400 rounded\",\n              title: \"Triangle\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./icon/triangle.svg\",\n                alt: \"Triangle\",\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addShape(\"stickman\"),\n              className: \"p-2 hover:bg-gray-400 rounded\",\n              title: \"Stickman\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./icon/stickman.svg\",\n                alt: \"Stickman\",\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-4 left-1/2 text-xs w-full items-center justify-center transform -translate-x-1/2 flex gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-gray-900 py-2 px-4 rounded-md text-white hover:bg-slate-600\",\n          onClick: saveCanvasAsImage,\n          children: \"Save Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hover:underline underline-offset-2\",\n          onClick: clearCanvas,\n          children: \"Clear Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 800,\n        height: 600,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp,\n        className: \"border border-gray-300 shadow-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 13\n  }, this);\n};\n_s(Canvas, \"dHlTGETKgq97uHBy0kKzrce43QY=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","shapes","setShapes","selectedShapeIndex","setSelectedShapeIndex","isDragging","setIsDragging","isResizing","setIsResizing","resizeHandle","setResizeHandle","offset","setOffset","x","y","canvas","current","ctx","getContext","clearRect","width","height","forEach","shape","index","strokeStyle","lineWidth","type","strokeRect","drawParallelogram","drawCircle","drawArrow","drawDiamond","drawOval","drawTriangle","drawStickman","handleSize","fillStyle","fillRect","beginPath","moveTo","lineTo","closePath","stroke","arc","Math","PI","ellipse","addShape","newShape","isOpen","setIsOpen","clearCanvas","saveCanvasAsImage","tempCanvas","document","createElement","tempCtx","drawImage","image","toDataURL","link","href","download","click","handleMouseDown","e","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","handles","nw","ne","sw","se","key","value","Object","entries","handleMouseMove","updatedShapes","map","newWidth","newHeight","newX","newY","handleMouseUp","handleKeyDown","filter","_","addEventListener","removeEventListener","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","src","alt","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_c","$RefreshReg$"],"sources":["D:/Work/office-work/canvas/src/components/Canvas.jsx"],"sourcesContent":["    import React, { useRef, useEffect, useState } from \"react\";\r\n\r\n    const Canvas = () => {\r\n        const canvasRef = useRef(null);\r\n        const [shapes, setShapes] = useState([]);\r\n        const [selectedShapeIndex, setSelectedShapeIndex] = useState(null);\r\n        const [isDragging, setIsDragging] = useState(false);\r\n        const [isResizing, setIsResizing] = useState(false);\r\n        const [resizeHandle, setResizeHandle] = useState(null); // 'nw', 'ne', 'sw', 'se'\r\n        const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n\r\n        // Draw shapes on the canvas\r\n        useEffect(() => {\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext(\"2d\");\r\n\r\n            // Clear the canvas\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // Draw all shapes\r\n            shapes.forEach((shape, index) => {\r\n                ctx.strokeStyle = \"black\"; // Set outline color to black\r\n                ctx.lineWidth = 2; // Set outline thickness\r\n\r\n                switch (shape.type) {\r\n                    case \"rectangle\":\r\n                        ctx.strokeRect(shape.x, shape.y, shape.width, shape.height);\r\n                        break;\r\n                    case \"parallelogram\":\r\n                        drawParallelogram(ctx, shape);\r\n                        break;\r\n                    case \"circle\":\r\n                        drawCircle(ctx, shape);\r\n                        break;\r\n                    case \"arrow\":\r\n                        drawArrow(ctx, shape);\r\n                        break;\r\n                    case \"diamond\":\r\n                        drawDiamond(ctx, shape);\r\n                        break;\r\n                    case \"oval\":\r\n                        drawOval(ctx, shape);\r\n                        break;\r\n                    case \"triangle\":\r\n                        drawTriangle(ctx, shape);\r\n                        break;\r\n                    case \"stickman\":\r\n                        drawStickman(ctx, shape);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                // Highlight selected shape\r\n                if (index === selectedShapeIndex) {\r\n                    ctx.strokeStyle = \"red\";\r\n                    ctx.strokeRect(\r\n                        shape.x - 5,\r\n                        shape.y - 5,\r\n                        shape.width + 10,\r\n                        shape.height + 10\r\n                    );\r\n\r\n                    // Draw resize handles\r\n                    const handleSize = 8;\r\n                    ctx.fillStyle = \"black\";\r\n                    ctx.fillRect(\r\n                        shape.x - handleSize / 2,\r\n                        shape.y - handleSize / 2,\r\n                        handleSize,\r\n                        handleSize\r\n                    ); // NW\r\n                    ctx.fillRect(\r\n                        shape.x + shape.width - handleSize / 2,\r\n                        shape.y - handleSize / 2,\r\n                        handleSize,\r\n                        handleSize\r\n                    ); // NE\r\n                    ctx.fillRect(\r\n                        shape.x - handleSize / 2,\r\n                        shape.y + shape.height - handleSize / 2,\r\n                        handleSize,\r\n                        handleSize\r\n                    ); // SW\r\n                    ctx.fillRect(\r\n                        shape.x + shape.width - handleSize / 2,\r\n                        shape.y + shape.height - handleSize / 2,\r\n                        handleSize,\r\n                        handleSize\r\n                    ); // SE\r\n                }\r\n            });\r\n        }, [shapes, selectedShapeIndex]);\r\n\r\n        // Function to draw a parallelogram\r\n        const drawParallelogram = (ctx, shape) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(shape.x + shape.width * 0.2, shape.y);\r\n            ctx.lineTo(shape.x + shape.width, shape.y);\r\n            ctx.lineTo(shape.x + shape.width * 0.8, shape.y + shape.height);\r\n            ctx.lineTo(shape.x, shape.y + shape.height);\r\n            ctx.closePath();\r\n            ctx.stroke(); // Draw outline\r\n        };\r\n\r\n        // Function to draw a circle\r\n        const drawCircle = (ctx, shape) => {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                shape.x + shape.width / 2,\r\n                shape.y + shape.height / 2,\r\n                shape.width / 2,\r\n                0,\r\n                Math.PI * 2\r\n            );\r\n            ctx.stroke(); // Draw outline\r\n        };\r\n\r\n        // Function to draw an arrow\r\n        const drawArrow = (ctx, shape) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(shape.x, shape.y + shape.height / 2);\r\n            ctx.lineTo(shape.x + shape.width * 0.8, shape.y + shape.height / 2);\r\n            ctx.lineTo(shape.x + shape.width * 0.8, shape.y);\r\n            ctx.lineTo(shape.x + shape.width, shape.y + shape.height / 2);\r\n            ctx.lineTo(shape.x + shape.width * 0.8, shape.y + shape.height);\r\n            ctx.lineTo(shape.x + shape.width * 0.8, shape.y + shape.height / 2);\r\n            ctx.closePath();\r\n            ctx.stroke(); // Draw outline\r\n        };\r\n\r\n        // Function to draw a diamond\r\n        const drawDiamond = (ctx, shape) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(shape.x + shape.width / 2, shape.y);\r\n            ctx.lineTo(shape.x + shape.width, shape.y + shape.height / 2);\r\n            ctx.lineTo(shape.x + shape.width / 2, shape.y + shape.height);\r\n            ctx.lineTo(shape.x, shape.y + shape.height / 2);\r\n            ctx.closePath();\r\n            ctx.stroke(); // Draw outline\r\n        };\r\n\r\n        // Function to draw an oval\r\n        const drawOval = (ctx, shape) => {\r\n            ctx.beginPath();\r\n            ctx.ellipse(\r\n                shape.x + shape.width / 2,\r\n                shape.y + shape.height / 2,\r\n                shape.width / 2,\r\n                shape.height / 2,\r\n                0,\r\n                0,\r\n                Math.PI * 2\r\n            );\r\n            ctx.stroke(); // Draw outline\r\n        };\r\n\r\n        // Function to draw a triangle\r\n        const drawTriangle = (ctx, shape) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(shape.x + shape.width / 2, shape.y);\r\n            ctx.lineTo(shape.x + shape.width, shape.y + shape.height);\r\n            ctx.lineTo(shape.x, shape.y + shape.height);\r\n            ctx.closePath();\r\n            ctx.stroke(); // Draw outline\r\n        };\r\n\r\n        // Function to draw a stickman\r\n        const drawStickman = (ctx, shape) => {\r\n            // Head\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                shape.x + shape.width / 2,\r\n                shape.y + shape.width / 4,\r\n                shape.width / 4,\r\n                0,\r\n                Math.PI * 2\r\n            );\r\n            ctx.stroke(); // Draw outline\r\n\r\n            // Body\r\n            ctx.beginPath();\r\n            ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.width / 2);\r\n            ctx.lineTo(shape.x + shape.width / 2, shape.y + shape.height * 0.75);\r\n            ctx.stroke();\r\n\r\n            // Arms\r\n            ctx.beginPath();\r\n            ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height * 0.4);\r\n            ctx.lineTo(shape.x, shape.y + shape.height * 0.6);\r\n            ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height * 0.4);\r\n            ctx.lineTo(shape.x + shape.width, shape.y + shape.height * 0.6);\r\n            ctx.stroke();\r\n\r\n            // Legs\r\n            ctx.beginPath();\r\n            ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height * 0.75);\r\n            ctx.lineTo(shape.x, shape.y + shape.height);\r\n            ctx.moveTo(shape.x + shape.width / 2, shape.y + shape.height * 0.75);\r\n            ctx.lineTo(shape.x + shape.width, shape.y + shape.height);\r\n            ctx.stroke();\r\n        };\r\n\r\n        // Add a new shape to the canvas\r\n        const addShape = (type) => {\r\n            const newShape = {\r\n                type,\r\n                x: 50,\r\n                y: 50,\r\n                width: 100,\r\n                height: 100,\r\n            };\r\n            setShapes([...shapes, newShape]);\r\n        };\r\n\r\n            const [isOpen, setIsOpen] = useState(true);\r\n        \r\n\r\n            // Clear canvas\r\n            const clearCanvas = () => {\r\n                setShapes([]);\r\n            };\r\n\r\n            // Save canvas as image\r\n            const saveCanvasAsImage = () => {\r\n                const canvas = canvasRef.current;\r\n            \r\n                const tempCanvas = document.createElement(\"canvas\");\r\n                const tempCtx = tempCanvas.getContext(\"2d\");\r\n\r\n                tempCanvas.width = canvas.width;\r\n                tempCanvas.height = canvas.height;\r\n            \r\n                tempCtx.fillStyle = \"#FFFFFF\";\r\n                tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\r\n                tempCtx.drawImage(canvas, 0, 0);\r\n            \r\n                // Convert to JPG\r\n                const image = tempCanvas.toDataURL(\"image/jpeg\"); \r\n                const link = document.createElement(\"a\");\r\n                link.href = image;\r\n                link.download = \"canvas_image.jpg\";\r\n                link.click();\r\n            };\r\n            \r\n\r\n        // Handle mouse down event\r\n        const handleMouseDown = (e) => {\r\n            const rect = canvasRef.current.getBoundingClientRect();\r\n            const mouseX = e.clientX - rect.left;\r\n            const mouseY = e.clientY - rect.top;\r\n\r\n            // Check if the mouse is inside any shape\r\n            shapes.forEach((shape, index) => {\r\n                if (\r\n                    mouseX >= shape.x &&\r\n                    mouseX <= shape.x + shape.width &&\r\n                    mouseY >= shape.y &&\r\n                    mouseY <= shape.y + shape.height\r\n                ) {\r\n                    setSelectedShapeIndex(index);\r\n\r\n                    // Check if the mouse is on a resize handle\r\n                    const handleSize = 8;\r\n                    const handles = {\r\n                        nw: { x: shape.x - handleSize / 2, y: shape.y - handleSize / 2 },\r\n                        ne: {\r\n                            x: shape.x + shape.width - handleSize / 2,\r\n                            y: shape.y - handleSize / 2,\r\n                        },\r\n                        sw: {\r\n                            x: shape.x - handleSize / 2,\r\n                            y: shape.y + shape.height - handleSize / 2,\r\n                        },\r\n                        se: {\r\n                            x: shape.x + shape.width - handleSize / 2,\r\n                            y: shape.y + shape.height - handleSize / 2,\r\n                        },\r\n                    };\r\n\r\n                    for (const [key, value] of Object.entries(handles)) {\r\n                        if (\r\n                            mouseX >= value.x &&\r\n                            mouseX <= value.x + handleSize &&\r\n                            mouseY >= value.y &&\r\n                            mouseY <= value.y + handleSize\r\n                        ) {\r\n                            setIsResizing(true);\r\n                            setResizeHandle(key);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    // If not resizing, start dragging\r\n                    setIsDragging(true);\r\n                    setOffset({\r\n                        x: mouseX - shape.x,\r\n                        y: mouseY - shape.y,\r\n                    });\r\n                }\r\n            });\r\n        };\r\n\r\n        // Handle mouse move event\r\n        const handleMouseMove = (e) => {\r\n            const rect = canvasRef.current.getBoundingClientRect();\r\n            const mouseX = e.clientX - rect.left;\r\n            const mouseY = e.clientY - rect.top;\r\n\r\n            if (isDragging && selectedShapeIndex !== null) {\r\n                // Move the shape\r\n                const updatedShapes = shapes.map((shape, index) => {\r\n                    if (index === selectedShapeIndex) {\r\n                        return {\r\n                            ...shape,\r\n                            x: mouseX - offset.x,\r\n                            y: mouseY - offset.y,\r\n                        };\r\n                    }\r\n                    return shape;\r\n                });\r\n\r\n                setShapes(updatedShapes);\r\n            } else if (isResizing && selectedShapeIndex !== null) {\r\n                // Resize the shape\r\n                const updatedShapes = shapes.map((shape, index) => {\r\n                    if (index === selectedShapeIndex) {\r\n                        let newWidth = shape.width;\r\n                        let newHeight = shape.height;\r\n                        let newX = shape.x;\r\n                        let newY = shape.y;\r\n\r\n                        switch (resizeHandle) {\r\n                            case \"nw\":\r\n                                newWidth = shape.width + (shape.x - mouseX);\r\n                                newHeight = shape.height + (shape.y - mouseY);\r\n                                newX = mouseX;\r\n                                newY = mouseY;\r\n                                break;\r\n                            case \"ne\":\r\n                                newWidth = mouseX - shape.x;\r\n                                newHeight = shape.height + (shape.y - mouseY);\r\n                                newY = mouseY;\r\n                                break;\r\n                            case \"sw\":\r\n                                newWidth = shape.width + (shape.x - mouseX);\r\n                                newHeight = mouseY - shape.y;\r\n                                newX = mouseX;\r\n                                break;\r\n                            case \"se\":\r\n                                newWidth = mouseX - shape.x;\r\n                                newHeight = mouseY - shape.y;\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n\r\n                        return {\r\n                            ...shape,\r\n                            x: newX,\r\n                            y: newY,\r\n                            width: newWidth,\r\n                            height: newHeight,\r\n                        };\r\n                    }\r\n                    return shape;\r\n                });\r\n\r\n                setShapes(updatedShapes);\r\n            }\r\n        };\r\n\r\n        // Handle mouse up event\r\n        const handleMouseUp = () => {\r\n            setIsDragging(false);\r\n            setIsResizing(false);\r\n            setResizeHandle(null);\r\n        };\r\n\r\n        // Handle keydown event to delete selected shape\r\n        useEffect(() => {\r\n            const handleKeyDown = (e) => {\r\n                if (e.key === \"Delete\" && selectedShapeIndex !== null) {\r\n                    // Remove the selected shape\r\n                    const updatedShapes = shapes.filter((_, index) => index !== selectedShapeIndex);\r\n                    setShapes(updatedShapes);\r\n                    setSelectedShapeIndex(null); // Deselect the shape\r\n                }\r\n            };\r\n\r\n            // Add event listener for keydown\r\n            document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n            // Cleanup event listener\r\n            return () => {\r\n                document.removeEventListener(\"keydown\", handleKeyDown);\r\n            };\r\n        }, [shapes, selectedShapeIndex]);\r\n\r\n        return (\r\n            <div className=\"relative flex flex-row h-auto\">\r\n                <div id=\"sidebar\" className=\"relative flex flex-col w-64 p-4 h-auto space-y-2 overflow-y-auto bg-gray-200\">\r\n                <div className=\"flex justify-between items-center\">\r\n                    <h2 className=\"text-lg font-bold\">TOOL BAR</h2>\r\n                    <button className=\"text-xs\" onClick={() => setIsOpen(!isOpen)}>\r\n                    {isOpen ? \"Collapse\" : \"Expand\"}\r\n                    </button>\r\n                    </div>\r\n                    <div className={`overflow-hidden transition-[max-height] duration-300 ease-in-out ${isOpen ? \"max-h-full flex-1\" : \"max-h-0\"}`}>\r\n                <div className=\"mt-2 p-4 border-slate-400 border-2 bg-slate-400 rounded-lg\">\r\n                    <div>\r\n                        <button\r\n                            onClick={() => addShape(\"rectangle\")}\r\n                            className=\"p-2 hover:bg-gray-400 rounded\"\r\n                            title=\"Rectangle\"\r\n                        >\r\n                            <img\r\n                                src=\"./icon/rectangle.svg\"\r\n                                alt=\"Rectangle\"\r\n                                className=\"w-6 h-6\"\r\n                            />\r\n                        </button>\r\n                        <button\r\n                            onClick={() => addShape(\"parallelogram\")}\r\n                            className=\"p-2 hover:bg-gray-400 rounded\"\r\n                            title=\"Parallelogram\"\r\n                        >\r\n                            <img\r\n                                src=\"./icon/parallelogram.svg\"\r\n                                alt=\"Parallelogram\"\r\n                                className=\"w-6 h-6\"\r\n                            />\r\n                        </button>\r\n                        <button\r\n                            onClick={() => addShape(\"circle\")}\r\n                            className=\"p-2 hover:bg-gray-400 rounded\"\r\n                            title=\"Circle\"\r\n                        >\r\n                            <img\r\n                                src=\"./icon/circle.svg\"\r\n                                alt=\"Circle\"\r\n                                className=\"w-6 h-6\"\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            onClick={() => addShape(\"arrow\")}\r\n                            className=\"p-2 hover:bg-gray-400 rounded\"\r\n                            title=\"Arrow\"\r\n                        >\r\n                            <img\r\n                                src=\"./icon/arrow.svg\"\r\n                                alt=\"Arrow\"\r\n                                className=\"w-6 h-6\"\r\n                            />\r\n                        </button>\r\n                        <button\r\n                            onClick={() => addShape(\"diamond\")}\r\n                            className=\"p-2 hover:bg-gray-400 rounded\"\r\n                            title=\"Diamond\"\r\n                        >\r\n                            <img\r\n                                src=\"./icon/diamond.svg\"\r\n                                alt=\"Diamond\"\r\n                                className=\"w-6 h-6\"\r\n                            />\r\n                        </button>\r\n                        <button\r\n                            onClick={() => addShape(\"oval\")}\r\n                            className=\"p-2 hover:bg-gray-400 rounded\"\r\n                            title=\"Oval\"\r\n                        >\r\n                            <img\r\n                                src=\"./icon/oval.svg\"\r\n                                alt=\"Oval\"\r\n                                className=\"w-6 h-6\"\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            onClick={() => addShape(\"triangle\")}\r\n                            className=\"p-2 hover:bg-gray-400 rounded\"\r\n                            title=\"Triangle\"\r\n                        >\r\n                            <img\r\n                                src=\"./icon/triangle.svg\"\r\n                                alt=\"Triangle\"\r\n                                className=\"w-6 h-6\"\r\n                            />\r\n                        </button>\r\n                        <button\r\n                            onClick={() => addShape(\"stickman\")}\r\n                            className=\"p-2 hover:bg-gray-400 rounded\"\r\n                            title=\"Stickman\"\r\n                        >\r\n                            <img\r\n                                src=\"./icon/stickman.svg\"\r\n                                alt=\"Stickman\"\r\n                                className=\"w-6 h-6\"\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"absolute bottom-4 left-1/2 text-xs w-full items-center justify-center transform -translate-x-1/2 flex gap-4\">\r\n                    <button className=\"bg-gray-900 py-2 px-4 rounded-md text-white hover:bg-slate-600\" onClick={saveCanvasAsImage}>\r\n                    Save Image\r\n                    </button>\r\n                    <button className=\"hover:underline underline-offset-2\" onClick={clearCanvas}>\r\n                    Clear Canvas\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-1 p-4\">\r\n                    <canvas\r\n                        ref={canvasRef}\r\n                        width={800}\r\n                        height={600}\r\n                        onMouseDown={handleMouseDown}\r\n                        onMouseMove={handleMouseMove}\r\n                        onMouseUp={handleMouseUp}\r\n                        onMouseLeave={handleMouseUp}\r\n                        className=\"border border-gray-300 shadow-lg\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    export default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}